name: ci
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  test:
    name: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [1.84.0, stable, beta, nightly]

        # Test with no features, default features ("") and all features.
        # Ordered fewest features to most features.
        args: ["--no-default-features", "", "--all-features"]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Install Rust
      uses: hecrj/setup-rust-action@v1
      with:
        rust-version: ${{ matrix.rust }}
    # - if: matrix.rust == 'stable'
    #   run: rustup component add clippy
    # - if: matrix.rust == 'stable'
    #   run: cargo clippy -- -D warnings
    - run: cargo build --verbose ${{ matrix.args }}
    - run: cargo test --verbose ${{ matrix.args }}
  valgrind:
    name: Test with Valgrind
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [stable]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Install Rust
      uses: hecrj/setup-rust-action@v1
      with:
        rust-version: ${{ matrix.rust }}
    - name: Install Valgrind
      run: sudo apt-get install -y valgrind
    - name: Install Just
      run: sudo apt-get install -y just
    - name: Install cargo-valgrind
      run: cargo install cargo-valgrind
    - name: Run Valgrind
      run: just valgrind
