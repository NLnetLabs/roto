%YAML 1.2
---
name: Roto
file_extensions: [roto]
scope: source.roto

variables:
  ident: \b[_\p{XID_Start}][_\p{XID_Continue}]*\b
 
contexts:
  main:
    - include: comment

    - match: \b(fn|filter|filtermap|test)\b
      scope: keyword.declaration.function.roto

    - match: \b(if|else|return|accept|reject|match)\b
      scope: keyword.control.roto

    - match: \b(import)\b
      scope: keyword.control.import.roto

    - match: \b(type)\b
      scope: keyword.declaration.struct.roto

    - match: \b(let)\b
      scope: keyword.declaration

    - match: '\b[0-9][0-9_]*(\.[0-9]+([eE][+-]?[0-9_]*)?)\b'
      scope: constant.numeric.float.roto

    - match: '\b[0-9][0-9_]*\b'
      scope: constant.numeric.integer.roto

    - match: \b(u8|u16|u32|u64|i8|i16|i32|i64|f32|f64|bool)\b
      scope: storage.type

    - match: \b[A-Z][_\p{XID_Continue}]*\b
      scope: storage.type

    - match: '{ident}'
      scope: variable.other.roto

    - match: '"'
      push: string

  comment:
    # A full or inline comment outside of any command call
    - match: \#
      scope: punctuation.definition.comment.roto
      push:
        - meta_scope: comment.line.roto
        - match: \n
          pop: true

  string:
    - meta_scope: string.quoted.double.roto

    - match: \\.
      scope: constant.character.escape.c

    - match: '"'
      pop: true
